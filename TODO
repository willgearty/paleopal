- workflow (steps of the analysis, like shinymgr/FossilSimShiny)
  1. occurrence data
    - get data (paleobiodb package) (includes filtering?)
    - clean data (palaeoverse)
    - paleoreconstruction of coordinates (palaeoverse or rgplates)
    - visualize data (ggplot2, deeptime, rphylopic?)
      - Should be able to make a large number of plots without hard-coding
    - summarize data (dplyr)
    - analyze data (???)
      - possibly multiple collapsed divs?
      - PCA of site composition?
  2. macrostrat
    - get data (rmacrostrat)
    - clean data (dplyr)
    - visualize data (ggplot2, deeptime)
    - analyze data?
  3. ???
- reporting (rendered quarto file)
  - options to download as HTML/PDF/qmd
  - regenerates any time something in the analysis changes?
  - https://rstudio.github.io/shinymeta/

* ensure that everything is fairly modular (look into how shinymgr makes this work)
  * but everything also needs to work with the reporting
  * ideally, we would release this with one or two workflows, but then could add more workflows in the future
  * https://mastering-shiny.org/scaling-modules.html
* state must be saved when moving between workflow and reporting
* is the reporting at the workflow level (separate report for each workflow type) or at the shiny app level (one report based on whatever workflow you last used)?

* other thoughts:
  - drag-and-drop? or some other way to pick and choose workflow (including order)
    - https://rstudio.github.io/sortable/articles/cloning.html

  - resizable sidebar
    - https://split.js.org/#/split-grid
    - https://github.com/nathancahill/split/tree/master/packages/split-grid

  - can use session$rootScope to access the input and output objects of the entire app?
    - but probably not the custom objects like intermediate_list

  - prevent removal of steps with dependencies?
  - base pipe vs magrittr pipe? (base pipe converts to non-piped code)

TODO:
- option to upload custom data (done)
  - need to include uploaded files in buildRmdBundle somehow...
  - still showing full file path in the code
- icons for buttons?

BUGS:
- plot option duplicates download code
  - I tried using a common expansionContext, but that breaks lots of the code chunks (e.g., pbdb download code disappears when changing genus)
  - may need to use ec$substituteMetaReactive()
  - https://github.com/rstudio/shinymeta/issues/126
- !!as.symbol in the ggplot code: https://github.com/rstudio/shinymeta/issues/125
- warnings from removing intermediate_list items
  - req() seems to make this better (maybe play around with cancelOutput arg?)
